let iter = fn (from, to, call, prev) => {
  if (from < to) {
    let res = call(from);
    iter(from + 1, to, call, res)
  } else {
    prev
  }
};
let range = fn(from, to) => {
    fn(next) => {
        iter(from, to, next, 0)
    }
};
let result_iter = iter(0, 20, fn(x) => { let _ = print("result_iter current = " + x); x * 2 }, 0);
let _ = print(result_iter);

let until20 = range(0, 20);
let doubled = until20(fn(x) => { let _ = print("until20 current = " + x); x * 2 });
let _ = print(doubled);

let map = fn(iterator, mapper) => {
    iterator(mapper)
};

let doubled = map(range(0, 20), fn(x) => { let _ = print("map(range0, 20), ... current = " + x); x * 2 });
let _ = print(doubled);
0
